

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Apr 24 02:20:59 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	intcode,global,reloc=2,class=CODE,delta=1
     9                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    10                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    11                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    13  0000                     
    14                           ; Version 2.05
    15                           ; Generated 20/12/2018 GMT
    16                           ; 
    17                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC18F4550 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     _INTCONbits	set	4082
    49  0000                     _TMR0H	set	4055
    50  0000                     _TMR0L	set	4054
    51  0000                     _T0CONbits	set	4053
    52  0000                     _TRISB	set	3987
    53  0000                     _TRISE	set	3990
    54  0000                     _TRISA	set	3986
    55  0000                     _ADCON1	set	4033
    56  0000                     _CMCON	set	4020
    57  0000                     _TRISCbits	set	3988
    58  0000                     _TRISD	set	3989
    59  0000                     _LATE	set	3981
    60  0000                     _LATD	set	3980
    61  0000                     _LATC	set	3979
    62  0000                     _LATB	set	3978
    63  0000                     _LATA	set	3977
    64  0000                     _TMR0IF	set	32658
    65                           
    66                           ; #config settings
    67  0000                     
    68                           	psect	cinit
    69  007FF6                     __pcinit:
    70                           	opt callstack 0
    71  007FF6                     start_initialization:
    72                           	opt callstack 0
    73  007FF6                     __initialization:
    74                           	opt callstack 0
    75  007FF6                     end_of_initialization:
    76                           	opt callstack 0
    77  007FF6                     __end_of__initialization:
    78                           	opt callstack 0
    79  007FF6  9001               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    80  007FF8  9201               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    81  007FFA  0100               	movlb	0
    82  007FFC  EF02  F010         	goto	_main	;jump to C main() function
    83                           
    84                           	psect	cstackCOMRAM
    85  000000                     __pcstackCOMRAM:
    86                           	opt callstack 0
    87  000000                     
    88                           ; 1 bytes @ 0x0
    89 ;;
    90 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    91 ;;
    92 ;; *************** function _main *****************
    93 ;; Defined at:
    94 ;;		line 58 in file "main.c"
    95 ;; Parameters:    Size  Location     Type
    96 ;;		None
    97 ;; Auto vars:     Size  Location     Type
    98 ;;		None
    99 ;; Return value:  Size  Location     Type
   100 ;;                  1    wreg      void 
   101 ;; Registers used:
   102 ;;		None
   103 ;; Tracked objects:
   104 ;;		On entry : 0/0
   105 ;;		On exit  : 0/0
   106 ;;		Unchanged: 0/0
   107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   108 ;;      Params:         0       0       0       0       0       0       0       0       0
   109 ;;      Locals:         0       0       0       0       0       0       0       0       0
   110 ;;      Temps:          0       0       0       0       0       0       0       0       0
   111 ;;      Totals:         0       0       0       0       0       0       0       0       0
   112 ;;Total ram usage:        0 bytes
   113 ;; Hardware stack levels required when called:    1
   114 ;; This function calls:
   115 ;;		Nothing
   116 ;; This function is called by:
   117 ;;		Startup code after reset
   118 ;; This function uses a non-reentrant model
   119 ;;
   120                           
   121                           	psect	text0
   122  002004                     __ptext0:
   123                           	opt callstack 0
   124  002004                     _main:
   125                           	opt callstack 30
   126                           
   127                           ;main.c: 62:     {;main.c: 64:     }
   128                           
   129                           ;incstack = 0
   130                           ;main.c: 61:     while (1)
   131  002004  D7FF               	goto	_main
   132  002006                     __end_of_main:
   133                           	opt callstack 0
   134                           
   135 ;; *************** function _myISR *****************
   136 ;; Defined at:
   137 ;;		line 70 in file "FW_Interrupt.c"
   138 ;; Parameters:    Size  Location     Type
   139 ;;		None
   140 ;; Auto vars:     Size  Location     Type
   141 ;;		None
   142 ;; Return value:  Size  Location     Type
   143 ;;                  1    wreg      void 
   144 ;; Registers used:
   145 ;;		None
   146 ;; Tracked objects:
   147 ;;		On entry : 0/0
   148 ;;		On exit  : 0/0
   149 ;;		Unchanged: 0/0
   150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   151 ;;      Params:         0       0       0       0       0       0       0       0       0
   152 ;;      Locals:         0       0       0       0       0       0       0       0       0
   153 ;;      Temps:          0       0       0       0       0       0       0       0       0
   154 ;;      Totals:         0       0       0       0       0       0       0       0       0
   155 ;;Total ram usage:        0 bytes
   156 ;; Hardware stack levels used:    1
   157 ;; This function calls:
   158 ;;		Nothing
   159 ;; This function is called by:
   160 ;;		Interrupt level 2
   161 ;; This function uses a non-reentrant model
   162 ;;
   163                           
   164                           	psect	intcode
   165  002008                     __pintcode:
   166                           	opt callstack 0
   167  002008                     _myISR:
   168                           	opt callstack 30
   169                           
   170                           ;incstack = 0
   171  002008  8201               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   172  00200A  EDF6  F03F         	call	int_func,f	;refresh shadow registers
   173                           
   174                           	psect	intcode_body
   175  007FEC                     __pintcode_body:
   176                           	opt callstack 30
   177  007FEC                     int_func:
   178                           	opt callstack 30
   179  007FEC  0006               	pop		; remove dummy address from shadow register refresh
   180                           
   181                           ;FW_Interrupt.c: 75:     if(TMR0IF){
   182  007FEE  B4F2               	btfsc	4082,2,c	;volatile
   183                           
   184                           ;FW_Interrupt.c: 76:         TMR0IF=0;
   185  007FF0  94F2               	bcf	4082,2,c	;volatile
   186  007FF2  9201               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
   187  007FF4  0011               	retfie		f
   188  007FF6                     __end_of_myISR:
   189                           	opt callstack 0
   190  0000                     
   191                           	psect	rparam
   192  0000                     
   193                           	psect	temp
   194  000001                     btemp:
   195                           	opt callstack 0
   196  000001                     	ds	1
   197  0000                     int$flags	set	btemp
   198  0000                     wtemp8	set	btemp+1
   199  0000                     ttemp5	set	btemp+1
   200  0000                     ttemp6	set	btemp+4
   201  0000                     ttemp7	set	btemp+8
   202                           tosu	equ	0xFFF
   203                           tosh	equ	0xFFE
   204                           tosl	equ	0xFFD
   205                           stkptr	equ	0xFFC
   206                           pclatu	equ	0xFFB
   207                           pclath	equ	0xFFA
   208                           pcl	equ	0xFF9
   209                           tblptru	equ	0xFF8
   210                           tblptrh	equ	0xFF7
   211                           tblptrl	equ	0xFF6
   212                           tablat	equ	0xFF5
   213                           prodh	equ	0xFF4
   214                           prodl	equ	0xFF3
   215                           indf0	equ	0xFEF
   216                           postinc0	equ	0xFEE
   217                           postdec0	equ	0xFED
   218                           preinc0	equ	0xFEC
   219                           plusw0	equ	0xFEB
   220                           fsr0h	equ	0xFEA
   221                           fsr0l	equ	0xFE9
   222                           wreg	equ	0xFE8
   223                           indf1	equ	0xFE7
   224                           postinc1	equ	0xFE6
   225                           postdec1	equ	0xFE5
   226                           preinc1	equ	0xFE4
   227                           plusw1	equ	0xFE3
   228                           fsr1h	equ	0xFE2
   229                           fsr1l	equ	0xFE1
   230                           bsr	equ	0xFE0
   231                           indf2	equ	0xFDF
   232                           postinc2	equ	0xFDE
   233                           postdec2	equ	0xFDD
   234                           preinc2	equ	0xFDC
   235                           plusw2	equ	0xFDB
   236                           fsr2h	equ	0xFDA
   237                           fsr2l	equ	0xFD9
   238                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94      0       0
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _myISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _myISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _myISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _myISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _myISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _myISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _myISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _myISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _myISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _myISR                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _myISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5E      0       0       1        0.0%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Apr 24 02:20:59 2019

            __CFG_BOR$ON 000000              __CFG_BORV$3 000000             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CPB$OFF 000000             __CFG_LVP$OFF 000000  
           __CFG_WDT$OFF 000000                     _LATA 000F89                     _LATB 000F8A  
                   _LATC 000F8B                     _LATD 000F8C                     _LATE 000F8D  
                   _main 2004                     btemp 0001                     start 200E  
          __CFG_IESO$OFF 000000            __CFG_MCLRE$ON 000000             ___param_bank 000000  
          __CFG_PLLDIV$5 000000                    ?_main 0000                    _CMCON 000FB4  
                  _TMR0H 000FD7                    _TMR0L 000FD6            __CFG_USBDIV$2 000000  
                  _TRISA 000F92                    _TRISB 000F93                    _TRISD 000F95  
                  _TRISE 000F96            __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000           __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000  
         __CFG_EBTR1$OFF 000000            __CFG_WRTB$OFF 000000            __CFG_WRTC$OFF 000000  
         __CFG_EBTRB$OFF 000000                    _myISR 2008                    ttemp5 0002  
                  ttemp6 0005                    ttemp7 0009                    wtemp8 0002  
        __initialization 7FF6             __end_of_main 2006                   ??_main 0000  
          __activetblptr 000000                   _ADCON1 000FC1                   ?_myISR 0000  
                 _TMR0IF 007F92           __CFG_VREGEN$ON 000000           __CFG_XINST$OFF 000000  
         __CFG_STVREN$ON 000000               __accesstop 0060  __end_of__initialization 7FF6  
        __CFG_PBADEN$OFF 000000            ___rparam_used 000001           __pcstackCOMRAM 0000  
          __end_of_myISR 7FF6                  ??_myISR 0000                  __Hparam 0000  
                __Lparam 0000                  __pcinit 7FF6                  __ramtop 0800  
                __ptext0 2004                _T0CONbits 000FD5           __pintcode_body 7FEC  
   end_of_initialization 7FF6                  int_func 7FEC                _TRISCbits 000F94  
    start_initialization 7FF6         __CFG_LPT1OSC$OFF 000000                __pintcode 2008  
         __size_of_myISR 5FEE         __CFG_WDTPS$32768 000000                 __Hrparam 0000  
               __Lrparam 0000            __size_of_main 0002                 int$flags 0001  
  __CFG_CPUDIV$OSC1_PLL2 000000               _INTCONbits 000FF2                 intlevel2 0000  
     __CFG_FOSC$HSPLL_HS 000000  
